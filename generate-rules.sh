#!/usr/bin/env bash
# dependencies: git, jq, tr (coreutils), awk (gawk)

for c in git jq tr awk; do
  command -v $c > /dev/null
  if [[ $? > 0 ]]; then
    echo "Error: Command $c not found in \$PATH."
    exit 1
  fi
done

tohex() {
  printf $1 | awk '{ printf("%04x", $1) }'
}

shopt -s globstar
set -eu

OTD_CONFIGURATIONS="${OTD_CONFIGURATIONS:="$(git rev-parse --show-toplevel)/OpenTabletDriver.Configurations/Configurations"}"

script='[
  .[] | { Name:.Name, libinput:(.Attributes.libinputoverride // "0") } + (.DigitizerIdentifiers[] | { VendorID:.VendorID, ProductID:.ProductID })
] | unique | sort_by(.VendorID,.ProductID) | .[] | "\(.Name):\(.VendorID):\(.ProductID):\(.libinput)"'

configs_arr=$(jq -s "$script" $OTD_CONFIGURATIONS/**/**.json | tr -d '"')

echo \# OpenTabletDriver udev rules generated by eng/linux/generate-rules.sh
echo KERNEL==\"uinput\", SUBSYSTEM==\"misc\", OPTIONS+=\"static_node=uinput\", TAG+=\"uaccess\", TAG+=\"udev-acl\"

IFS=':'
while read s; do
  read -r name vid pid libinput <<< $s

  if [ -z "${prevname:-}" ] || [ "$prevname" != "$name" ]; then
    echo \# ${name}
  fi

  prevname=$name

  vid=$(tohex $vid)
  pid=$(tohex $pid)

  if [ ! -z "${oldvid:-}" ] && [ "$oldvid" == "$vid" ]; then
    if [ ! -z "${oldpid:-}" ] && [ "$oldpid" == "$pid" ]; then
      continue
    fi
  fi

  oldvid=$vid
  oldpid=$pid

  echo KERNEL==\"hidraw*\", ATTRS{idVendor}==\"$vid\", ATTRS{idProduct}==\"$pid\", TAG+=\"uaccess\", TAG+=\"udev-acl\"
  echo SUBSYSTEM==\"usb\", ATTRS{idVendor}==\"$vid\", ATTRS{idProduct}==\"$pid\", TAG+=\"uaccess\", TAG+=\"udev-acl\"

  if [[ $libinput > 0 ]]; then
    echo SUBSYSTEM==\"input\", ATTRS{idVendor}==\"$vid\", ATTRS{idProduct}==\"$pid\", ENV{LIBINPUT_IGNORE_DEVICE}=\"$libinput\"
  fi
done <<< $configs_arr
